---
title: Sistema de Gestión de Inventario - Arquitectura Empresarial
---
graph TB
    %% ============================================
    %% CAPA DE USUARIOS Y CLIENTES
    %% ============================================
    subgraph USERS["👥 USUARIOS"]
        WEB["🌐 Aplicación Web<br/>Dashboard de Gestión"]
        MOBILE["📱 App Móvil<br/>Ventas en Tienda"]
        API_CLIENT["🔌 Sistemas Externos<br/>ERP, Ecommerce"]
    end

    %% ============================================
    %% CAPA DE API (PUNTO DE ENTRADA)
    %% ============================================
    subgraph API["🚪 API REST"]
        GATEWAY["Puerto 8080<br/>Seguridad con API Keys<br/>Rate Limiting"]
    end

    %% ============================================
    %% FUNCIONALIDADES DE NEGOCIO
    %% ============================================
    subgraph BUSINESS["💼 FUNCIONALIDADES DE NEGOCIO"]
        direction TB
        
        subgraph PRODUCTS["📦 Gestión de Productos"]
            PROD_CREATE["✨ Crear Productos"]
            PROD_UPDATE["✏️ Actualizar Info"]
            PROD_SEARCH["🔍 Búsqueda por SKU"]
        end
        
        subgraph INVENTORY["📊 Control de Inventario"]
            INV_UPDATE["📈 Actualizar Stock<br/><i>Previene Overselling</i>"]
            INV_TRANSFER["🔄 Transferir entre Tiendas<br/><i>Optimización Logística</i>"]
            INV_CHECK["✓ Verificar Disponibilidad<br/><i>Consulta en Tiempo Real</i>"]
        end
        
        subgraph RESERVATIONS["🎫 Sistema de Reservas"]
            RES_CREATE["🔒 Reservar Stock<br/><i>Bloqueo Temporal</i>"]
            RES_CONFIRM["✅ Confirmar Venta<br/><i>Completar Transacción</i>"]
            RES_CANCEL["❌ Cancelar/Liberar<br/><i>Devolver al Inventario</i>"]
            RES_AUTO["⏰ Auto-Expiración<br/><i>Liberación Automática TTL</i>"]
        end
    end

    %% ============================================
    %% SISTEMA DE EVENTOS (CORAZÓN DEL SISTEMA)
    %% ============================================
    subgraph EVENTS["📡 SISTEMA DE EVENTOS EN TIEMPO REAL"]
        direction LR
        
        EVENT_BUS["🚀 Bus de Eventos<br/><b>Redis Streams</b><br/><i>100k eventos/stream</i>"]
        
        subgraph EVENT_TYPES["Tipos de Eventos Publicados"]
            E1["stock.created<br/>stock.updated<br/>stock.transferred"]
            E2["reservation.created<br/>reservation.confirmed<br/>reservation.cancelled"]
        end
        
        RESILIENCE["🛡️ MECANISMO DE RESILIENCIA<br/><b>Re-intentos Automáticos</b><br/>✓ Sin pérdida de datos<br/>✓ Retry cada 10s si falla<br/>✓ Auditoría completa"]
    end

    %% ============================================
    %% BASE DE DATOS
    %% ============================================
    subgraph DATA["💾 ALMACENAMIENTO PERSISTENTE"]
        DB[("📚 Base de Datos SQLite<br/><b>inventory.db</b><br/>━━━━━━━━━━━━<br/>✓ Productos<br/>✓ Stock por Tienda<br/>✓ Reservas Activas<br/>✓ Historial de Eventos")]
    end

    %% ============================================
    %% PROCESOS AUTOMÁTICOS
    %% ============================================
    subgraph WORKERS["⚙️ PROCESOS AUTOMÁTICOS EN SEGUNDO PLANO"]
        direction TB
        
        WORKER1["⏰ <b>Monitor de Expiración</b><br/>Ejecuta: Cada 1 minuto<br/>━━━━━━━━━━━━<br/>Cancela reservas vencidas<br/>Libera stock automáticamente<br/>Publica eventos de expiración"]
        
        WORKER2["🔄 <b>Sistema de Recuperación</b><br/>Ejecuta: Cada 10 segundos<br/>━━━━━━━━━━━━<br/>Re-intenta eventos fallidos<br/>Garantiza entrega eventual<br/>Monitorea salud del sistema"]
    end

    %% ============================================
    %% CARACTERÍSTICAS TÉCNICAS
    %% ============================================
    subgraph FEATURES["⚡ CARACTERÍSTICAS TÉCNICAS CLAVE"]
        direction LR
        
        F1["🔐 Optimistic Locking<br/><i>Previene condiciones de carrera</i><br/><i>Múltiples usuarios simultáneos</i>"]
        F2["📝 Event Sourcing<br/><i>Auditoría completa de cambios</i><br/><i>Trazabilidad total</i>"]
        F3["🎯 Arquitectura Desacoplada<br/><i>Cambiar Redis por Kafka</i><br/><i>Sin modificar código de negocio</i>"]
    end

    %% ============================================
    %% CONSUMIDORES DE EVENTOS (FUTURO)
    %% ============================================
    subgraph CONSUMERS["🔌 SISTEMAS QUE PUEDEN CONSUMIR EVENTOS"]
        direction TB
        
        C1["📊 <b>Dashboard Analítico</b><br/>Reportes en tiempo real<br/>KPIs de negocio"]
        C2["📧 <b>Sistema de Notificaciones</b><br/>Alertas de stock bajo<br/>Confirmaciones de venta"]
        C3["🔗 <b>Integración ERP</b><br/>Sincronización automática<br/>Contabilidad en tiempo real"]
    end

    %% ============================================
    %% CONEXIONES PRINCIPALES
    %% ============================================
    
    %% Usuarios a API
    WEB --> GATEWAY
    MOBILE --> GATEWAY
    API_CLIENT --> GATEWAY
    
    %% API a Funcionalidades
    GATEWAY --> PRODUCTS
    GATEWAY --> INVENTORY
    GATEWAY --> RESERVATIONS
    
    %% Funcionalidades a Base de Datos
    PRODUCTS --> DATA
    INVENTORY --> DATA
    RESERVATIONS --> DATA
    
    %% Funcionalidades a Sistema de Eventos
    INVENTORY -->|"Publica eventos<br/>en tiempo real"| EVENT_BUS
    RESERVATIONS -->|"Publica eventos<br/>en tiempo real"| EVENT_BUS
    
    %% Sistema de Eventos
    EVENT_BUS --> EVENT_TYPES
    EVENT_BUS <--> RESILIENCE
    
    %% Resiliencia a BD (para retry)
    RESILIENCE <-->|"Consulta eventos<br/>pendientes"| DATA
    
    %% Workers
    WORKER1 -->|"Monitorea"| RESERVATIONS
    WORKER1 -->|"Publica eventos"| EVENT_BUS
    
    WORKER2 -->|"Re-intenta"| RESILIENCE
    WORKER2 -->|"Lee pendientes"| DATA
    
    %% Consumidores de Eventos
    EVENT_BUS -.->|"Stream de eventos"| CONSUMERS
    
    %% Características técnicas vinculadas
    INVENTORY -.-> F1
    DATA -.-> F2
    EVENT_BUS -.-> F3

    %% ============================================
    %% ESTILOS Y COLORES
    %% ============================================
    
    classDef userLayer fill:#E3F2FD,stroke:#1976D2,stroke-width:3px,color:#000
    classDef apiLayer fill:#F3E5F5,stroke:#7B1FA2,stroke-width:3px,color:#000
    classDef businessLayer fill:#E8F5E9,stroke:#388E3C,stroke-width:3px,color:#000
    classDef eventLayer fill:#FFF3E0,stroke:#F57C00,stroke-width:3px,color:#000
    classDef dataLayer fill:#FCE4EC,stroke:#C2185B,stroke-width:3px,color:#000
    classDef workerLayer fill:#FFEBEE,stroke:#D32F2F,stroke-width:3px,color:#000
    classDef featureLayer fill:#E0F2F1,stroke:#00796B,stroke-width:2px,color:#000
    classDef consumerLayer fill:#F1F8E9,stroke:#689F38,stroke-width:2px,color:#000,stroke-dasharray: 5 5
    classDef resilience fill:#FF6B6B,stroke:#C92A2A,stroke-width:4px,color:#fff
    
    class WEB,MOBILE,API_CLIENT userLayer
    class GATEWAY apiLayer
    class PRODUCTS,INVENTORY,RESERVATIONS,PROD_CREATE,PROD_UPDATE,PROD_SEARCH,INV_UPDATE,INV_TRANSFER,INV_CHECK,RES_CREATE,RES_CONFIRM,RES_CANCEL,RES_AUTO businessLayer
    class EVENT_BUS,EVENT_TYPES,E1,E2 eventLayer
    class DB dataLayer
    class WORKER1,WORKER2 workerLayer
    class F1,F2,F3 featureLayer
    class C1,C2,C3 consumerLayer
    class RESILIENCE resilience

